/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agenciacarros;

import javax.swing.JOptionPane;

/**
 *
 * @author josealberto
 */
public class frmVentas extends javax.swing.JFrame {

    static final int TOTAL_VENTAS_DIA=100;
    int contador=0;
    Producto vprod[] = new Producto[TOTAL_VENTAS_DIA];
    Producto p=null;
    
    /**
     * Creates new form frmVentas
     */
    public frmVentas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        rotulovendedor = new javax.swing.JLabel();
        rotuloidventa = new javax.swing.JLabel();
        rotulocomprador = new javax.swing.JLabel();
        rotulotipopago = new javax.swing.JLabel();
        rotulocolor = new javax.swing.JLabel();
        rotulotransmision = new javax.swing.JLabel();
        rotulotipocomprador = new javax.swing.JLabel();
        rotulodescuento = new javax.swing.JLabel();
        rotulomodelo = new javax.swing.JLabel();
        costolista = new javax.swing.JLabel();
        cajavendedor = new javax.swing.JTextField();
        cajaidventa = new javax.swing.JTextField();
        cajacomprador = new javax.swing.JTextField();
        combotipocomprador = new javax.swing.JComboBox<>();
        combotipopago = new javax.swing.JComboBox<>();
        cajadescuento = new javax.swing.JTextField();
        combocolor = new javax.swing.JComboBox<>();
        combomodelo = new javax.swing.JComboBox<>();
        combotransmision = new javax.swing.JComboBox<>();
        elpreciofinal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        botonguardar = new javax.swing.JButton();
        botonbuscar = new javax.swing.JButton();
        botonlimpiar = new javax.swing.JButton();
        botonsalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(693, 498));
        setMinimumSize(new java.awt.Dimension(693, 498));
        setSize(new java.awt.Dimension(693, 498));

        jPanel1.setBackground(new java.awt.Color(26, 55, 101));

        rotulovendedor.setForeground(new java.awt.Color(255, 255, 255));
        rotulovendedor.setText("Vendedor");

        rotuloidventa.setForeground(new java.awt.Color(255, 255, 255));
        rotuloidventa.setText("Id Venta");

        rotulocomprador.setForeground(new java.awt.Color(255, 255, 255));
        rotulocomprador.setText("Comprador");

        rotulotipopago.setForeground(new java.awt.Color(255, 255, 255));
        rotulotipopago.setText("Tipo de pago");

        rotulocolor.setForeground(new java.awt.Color(255, 255, 255));
        rotulocolor.setText("Color");

        rotulotransmision.setForeground(new java.awt.Color(255, 255, 255));
        rotulotransmision.setText("Transmisi√≥n");

        rotulotipocomprador.setForeground(new java.awt.Color(255, 255, 255));
        rotulotipocomprador.setText("Tipo de comprador");

        rotulodescuento.setForeground(new java.awt.Color(255, 255, 255));
        rotulodescuento.setText("Descuento");

        rotulomodelo.setForeground(new java.awt.Color(255, 255, 255));
        rotulomodelo.setText("Modelo");

        costolista.setForeground(new java.awt.Color(255, 255, 255));
        costolista.setText("0");

        combotipocomprador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empresario", "publico general", "empleado", " " }));
        combotipocomprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combotipocompradorActionPerformed(evt);
            }
        });

        combotipopago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Contado", "6meses", "12meses", "24meses" }));
        combotipopago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combotipopagoActionPerformed(evt);
            }
        });

        combocolor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "rojo", "verde", "azul", "negro", "blanco", "plata" }));

        combomodelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PERSONALIZADO", "MIRAGE", "MATIZ", "XTRAIL", "PICKUP", "FIESTA", "MAZDADOS" }));
        combomodelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combomodeloActionPerformed(evt);
            }
        });

        combotransmision.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "electrico", "automatico", "estandar" }));

        elpreciofinal.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        elpreciofinal.setForeground(new java.awt.Color(255, 255, 255));
        elpreciofinal.setText("0.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rotulocomprador)
                            .addComponent(cajacomprador, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rotulotipocomprador, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(combotipocomprador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cajavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                        .addComponent(cajaidventa, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(rotulocolor)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(combotransmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(elpreciofinal))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rotulotransmision)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(costolista))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rotulovendedor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rotuloidventa)))
                        .addGap(24, 24, 24)
                        .addComponent(rotulomodelo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(combocolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(combomodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rotulotipopago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rotulodescuento))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(combotipopago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cajadescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotulovendedor)
                    .addComponent(rotuloidventa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cajavendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cajaidventa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotulocomprador)
                    .addComponent(rotulotipocomprador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cajacomprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combotipocomprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotulotipopago)
                    .addComponent(rotulodescuento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combotipopago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cajadescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotulocolor)
                    .addComponent(rotulomodelo))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combocolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combomodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotulotransmision)
                    .addComponent(costolista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combotransmision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elpreciofinal))
                .addGap(15, 15, 15))
        );

        jPanel2.setBackground(new java.awt.Color(110, 13, 22));

        botonguardar.setBackground(new java.awt.Color(118, 26, 33));
        botonguardar.setText("Guardar");
        botonguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonguardarActionPerformed(evt);
            }
        });

        botonbuscar.setText("Buscar");
        botonbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonbuscarActionPerformed(evt);
            }
        });

        botonlimpiar.setText("Limpiar");
        botonlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonlimpiarActionPerformed(evt);
            }
        });

        botonsalir.setText("Salir");
        botonsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonsalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonbuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(botonguardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonlimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonsalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(botonguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(botonlimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonlimpiarActionPerformed
        cajavendedor.setText("");
        cajaidventa.setText("");
        cajacomprador.setText("");
        combotipocomprador.setSelectedIndex(-1);
        combotipopago.setSelectedIndex(-1);
        cajadescuento.setText("");
        combocolor.setSelectedIndex(-1);
        combomodelo.setSelectedIndex(-1);
        combotransmision.setSelectedIndex(-1);
        elpreciofinal.setText("sin precio");
        costolista.setText("sin modelo");
        
    }//GEN-LAST:event_botonlimpiarActionPerformed

    private void botonguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonguardarActionPerformed
        if(vprod.length<=100){
            
            int idventa=Integer.parseInt(cajaidventa.getText());
            String vendio=cajavendedor.getText();
            String compro=cajacomprador.getText();
            String conveniencia=combotipocomprador.getSelectedItem().toString();
            String tipopago=combotipopago.getSelectedItem().toString();
            String color=combocolor.getSelectedItem().toString();
            String transmision=combotransmision.getSelectedItem().toString();
            String modelocombo=combomodelo.getSelectedItem().toString();
            double costo = Double.parseDouble(costolista.getText());
            int modelo=combomodelo.getSelectedIndex();
            int descuento=Integer.parseInt( cajadescuento.getText());
            double total=Double.parseDouble(elpreciofinal.getText());   
            double tasa=0.11/12;
            int meses = 0;
            double precioMensual;
            int pagaen=combotipopago.getSelectedIndex();
             switch (modelo) {
                case 1:
                    costo=127000;
                    costolista.setText(String.valueOf(costo));
                    switch(pagaen){
                        case 0:
                    costo=127000;
                    elpreciofinal.setText(String.valueOf(costo));
                            break;
                        case 1:
                    meses=6;        
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));        
                            break;
                        case 2:
                    meses=12;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));            
                            break;
                        case 3:
                    meses=24;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));  
                            break;
                    }
                    
                    break;
                case 2:
                    costo=170000;
                    costolista.setText(String.valueOf(costo));
                                        switch(pagaen){
                        case 0:
                    costo=127000;
                    elpreciofinal.setText(String.valueOf(costo));
                            break;
                        case 1:
                    meses=6;        
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));        
                            break;
                        case 2:
                    meses=12;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));            
                            break;
                        case 3:
                    meses=24;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));  
                            break;
                    }
                    break;
                case 3:
                    costo=4150000;
                    costolista.setText(String.valueOf(costo));
                                        switch(pagaen){
                        case 0:
                    costo=127000;
                    elpreciofinal.setText(String.valueOf(costo));
                            break;
                        case 1:
                    meses=6;        
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));        
                            break;
                        case 2:
                    meses=12;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));            
                            break;
                        case 3:
                    meses=24;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));  
                            break;
                    }
                    break;
                case 4:
                    costo=760000;
                    costolista.setText(String.valueOf(costo));
                                        switch(pagaen){
                        case 0:
                    costo=127000;
                    elpreciofinal.setText(String.valueOf(costo));
                            break;
                        case 1:
                    meses=6;        
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));        
                            break;
                        case 2:
                    meses=12;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));            
                            break;
                        case 3:
                    meses=24;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));  
                            break;
                    }
                    break;
                case 5:
                    costo=105000;
                    costolista.setText(String.valueOf(costo));
                                        switch(pagaen){
                        case 0:
                    costo=127000;
                    elpreciofinal.setText(String.valueOf(costo));
                            break;
                        case 1:
                    meses=6;        
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));        
                            break;
                        case 2:
                    meses=12;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));            
                            break;
                        case 3:
                    meses=24;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));  
                            break;
                    }
                    break;
                case 6:
                    costo=270000;
                    costolista.setText(String.valueOf(costo));
                                        switch(pagaen){
                        case 0:
                    costo=127000;
                    elpreciofinal.setText(String.valueOf(costo));
                            break;
                        case 1:
                    meses=6;        
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));        
                            break;
                        case 2:
                    meses=12;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));            
                            break;
                        case 3:
                    meses=24;
                    precioMensual=costo*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    precioMensual = Math.round(precioMensual);
                    total = precioMensual*((tasa*(Math.pow(1+tasa, meses)))/(Math.pow(1+tasa, meses)-1));
                    elpreciofinal.setText(String.valueOf(total));  
                            break;
                    }
                    break;
                default:
                    break;
            }
            
            p=new Producto(idventa, vendio, compro, conveniencia, tipopago, color, transmision, costo, modelo, descuento, total);
            vprod[contador]=p;
            contador++;
            JOptionPane.showMessageDialog(this,"se ha registrado la compra");
        }else JOptionPane.showMessageDialog(this, "error al agregar la venta");
    }//GEN-LAST:event_botonguardarActionPerformed

    private void botonbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonbuscarActionPerformed
        String strid=cajaidventa.getText();
        if(strid.length()==0){JOptionPane.showMessageDialog(this,"necesitas ingresar un id de venta");
        }else if(strid==null){return;
        }
        int i=0;
        boolean result=false;
        int identificador=Integer.parseInt(strid);
        while (i<contador && result==false){
            p=vprod[i];
            if(p.getIdcompra()==identificador){result=true;
            }else {i++;}
            
            if(result==true){
                
            cajaidventa.setText(String.valueOf(p.getIdcompra()));
            cajavendedor.setText(p.getNombreV()+"");
            cajacomprador.setText(p.getNombreC()+"");
            combotipocomprador.setSelectedItem(p.getTipo()+"");
            combotipopago.setSelectedItem(p.getPago()+"");
            combocolor.setSelectedItem(p.getColor()+"");
            combomodelo.setSelectedItem(p.getModelo()+"");
            combotransmision.setSelectedItem(p.getTrans()+"");
            costolista.setText(String.valueOf(p.getCosto()));
            combomodelo.setSelectedItem(p.getModelo());
            cajadescuento.setText(String.valueOf(p.getDescuento()));
            elpreciofinal.setText(String.valueOf(p.getPreciofinal()));
            }else {JOptionPane.showMessageDialog(this,"no se encontraron coincidencias");}
        }
    }//GEN-LAST:event_botonbuscarActionPerformed

    private void botonsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonsalirActionPerformed
        dispose();
    }//GEN-LAST:event_botonsalirActionPerformed

    private void combotipocompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combotipocompradorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combotipocompradorActionPerformed

    private void combotipopagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combotipopagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combotipopagoActionPerformed

    private void combomodeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combomodeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combomodeloActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new frmVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonbuscar;
    private javax.swing.JButton botonguardar;
    private javax.swing.JButton botonlimpiar;
    private javax.swing.JButton botonsalir;
    private javax.swing.JTextField cajacomprador;
    private javax.swing.JTextField cajadescuento;
    private javax.swing.JTextField cajaidventa;
    private javax.swing.JTextField cajavendedor;
    private javax.swing.JComboBox<String> combocolor;
    private javax.swing.JComboBox<String> combomodelo;
    private javax.swing.JComboBox<String> combotipocomprador;
    private javax.swing.JComboBox<String> combotipopago;
    private javax.swing.JComboBox<String> combotransmision;
    private javax.swing.JLabel costolista;
    private javax.swing.JLabel elpreciofinal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel rotulocolor;
    private javax.swing.JLabel rotulocomprador;
    private javax.swing.JLabel rotulodescuento;
    private javax.swing.JLabel rotuloidventa;
    private javax.swing.JLabel rotulomodelo;
    private javax.swing.JLabel rotulotipocomprador;
    private javax.swing.JLabel rotulotipopago;
    private javax.swing.JLabel rotulotransmision;
    private javax.swing.JLabel rotulovendedor;
    // End of variables declaration//GEN-END:variables
}
